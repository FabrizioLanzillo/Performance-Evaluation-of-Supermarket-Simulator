[General]
network = Network
#sim-time-limit = 60s

repeat = 1
**.logging = true
**.quick_tills[*].is_quick = true
**.standard_tills[*].is_quick = false

**.number_of_tills = 10
**.percentage_quick_tills = 0.3

# RNGs
num-rngs = 3
seed-set = ${repetition}
*.externalWorld.rng-0 = 0
*.externalWorld.rng-1 = 1
*.supermarket.switch.rng-0 = 2



#####################
## Debugging
[Config Debugging]
**.number_of_tills = 10

# ExternalWorld
*.externalWorld.arrival_mean = 5
*.externalWorld.service_distribution = 0
*.externalWorld.service_mean = 1
*.externalWorld.service_std_deviation = 1

[Config Debugging_quick] 
extends = Debugging
**.percentage_quick_tills = 0.6
**.quick_checkout_threshold = 3

[Config Debugging_standard]
extends = Debugging
**.percentage_quick_tills = 0
**.quick_checkout_threshold = 0



#####################
## Verification
[Config Verification]
**.optimized_routing = false


[Config Ver_ExponentialService_OnlyStandardTills]
extends = Verification
**.number_of_tills = 1
**.percentage_quick_tills = 0

*.externalWorld.arrival_distribution = 0
*.externalWorld.service_distribution = 0
*.externalWorld.arrival_mean = 1
*.externalWorld.service_mean = 1

[Config Ver_Constant_OnlyStandardTills]
extends = Ver_ExponentialService_OnlyStandardTills
*.externalWorld.arrival_distribution = 99
*.externalWorld.service_distribution = 99

#n* of tills, arrival mean, service mean (x-x == x.x)
[Config Ver_ExponentialService_OnlyStandardTills_4_0-3_1-0]
extends = Ver_ExponentialService_OnlyStandardTills
sim-time-limit = 10000s
repeat = 10
**.number_of_tills = 4
*.externalWorld.arrival_mean = 0.3
*.externalWorld.service_mean = 1

[Config lognorm]
sim-time-limit = 10000s
repeat = 10
**.optimized_routing = false
**.number_of_tills = 4
**.percentage_quick_tills = 0

*.externalWorld.arrival_mean = 1
*.externalWorld.service_mean = 1
*.externalWorld.service_std_deviation = 0.5

*.externalWorld.arrival_distribution = 0
*.externalWorld.service_distribution = 1

[Config quick]
sim-time-limit = 10000s
repeat = 1
**.optimized_routing = false
**.number_of_tills = 10
**.percentage_quick_tills = 0.3
**.quick_checkout_threshold = 3

*.externalWorld.arrival_mean = 10
*.externalWorld.service_mean = 8

*.externalWorld.arrival_distribution = 0
*.externalWorld.service_distribution = 0



######################
# CONTINUITY AND MONOTONICITY TESTS
#
[Config Continuity_Test1] #2 quick tills, 3 standard tills
**.optimized_routing = true
repeat = 40
sim-time-limit = 10000s 
**.number_of_tills = 5 
*.externalWorld.arrival_mean = 3 
*.externalWorld.service_distribution = 0 
*.externalWorld.service_mean = ${3.1, 3.2} 
*.externalWorld.service_std_deviation = 1 
**.percentage_quick_tills = 0.4 
**.quick_checkout_threshold = 5 

[Config Monotonicity_Test]
**.optimized_routing = true
repeat = 40
sim-time-limit = 10000s 
**.number_of_tills = ${4, 6, 8} 
*.externalWorld.arrival_mean = 3 
*.externalWorld.service_distribution = 0 
*.externalWorld.service_mean = 5
*.externalWorld.service_std_deviation = 1 
**.percentage_quick_tills = 0.4 
**.quick_checkout_threshold = 6



[Config Factors_Calibration] 
**.optimized_routing = true 
sim-time-limit = 60000s  
**.number_of_tills = 5 
*.externalWorld.arrival_mean = 20 
*.externalWorld.service_distribution = 0  
*.externalWorld.service_mean = ${50, 70, 90, 100}
*.externalWorld.service_std_deviation = 1  
**.percentage_quick_tills = 0.2 
**.quick_checkout_threshold = 60 

#worst cases N:5 SM=145, AM=30; N:10 SM=150 AM=20; N:20 SM=150 AM=20;
#**.optimized_routing = true
#sim-time-limit = 20000s 
#**.number_of_tills = 10
#*.externalWorld.arrival_mean = 20
#*.externalWorld.service_distribution = 0 
#*.externalWorld.service_mean = ${30, 60, 90, 120}
#*.externalWorld.service_std_deviation = 1 
#**.percentage_quick_tills = 0
#**.quick_checkout_threshold = 30

#in terms of objects 10, 15, 25, 35
#AM=[20, 120] worst case for 5 is 30 
#N=${5, 10, 20} [5, 20]
#SM=${10, 30} [30, 90] 

#Critical cases, i.e. the AM is the lowest and SM the highest, to find upper and lower bounds
#N=5, AM=25, SM=120
#N=10, AM=20, SM=120
#N=50, AM=20, SM=120

#Trovare due range significativi per uno scenario ad alto traffico ed uno a basso, distinguerli e cos√¨ farci gli esperimenti


[Config experiment]
sim-time-limit = 10000s
warmup-period = 1000s

**.logging = false
**.optimized_routing = true

[Config an_2kr]
# Quick-checkout lognormal
extends = experiment
repeat = 5

**.number_of_tills = 10
**.percentage_quick_tills = ${0.2, 0.5}

**.quick_checkout_threshold = ${15, 60}

*.externalWorld.arrival_mean = ${10, 50}
*.externalWorld.service_mean = ${2, 3}
*.externalWorld.service_std_deviation = ${1, 1.75}

*.externalWorld.arrival_distribution = 0
*.externalWorld.service_distribution = 1


################################

[Config exp_2kr]
# Quick-checkout exponential
extends=experiment
repeat = 5

**.number_of_tills = 10
**.percentage_quick_tills = ${0.2, 0.5}
**.quick_checkout_threshold = ${15, 60}

*.externalWorld.service_distribution = 0 
*.externalWorld.arrival_distribution = 0 

*.externalWorld.arrival_mean = ${10, 50}  
*.externalWorld.service_mean = ${15, 90}

